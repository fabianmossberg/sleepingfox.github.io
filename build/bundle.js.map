{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/howler/dist/howler.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","<script>\n\timport { onMount } from \"svelte\";\n\timport howler from \"howler\";\n\t// import { timeLog } from \"console\";\n\tconst Howl = howler.Howl;\n\tlet timerWidth = 100;\n\tlet timeleft = 1000;\n\tlet startTime = 1000;\n\n\tvar soundClick = new Howl({\n\t\tsrc: [\"sfx/click.mp3\"],\n\t});\n\tvar soundSuccess = new Howl({\n\t\tsrc: [\"sfx/success.mp3\"],\n\t});\n\tvar soundWrong = new Howl({\n\t\tsrc: [\"sfx/wrong.mp3\"],\n\t});\n\tvar soundFail = new Howl({\n\t\tsrc: [\"sfx/fail.mp3\"],\n\t});\n\n\tfunction downloadTimer() {\n\t\tlet downloadTimer = setInterval(function () {\n\t\t\tif (timeleft <= 0) {\n\t\t\t\tanswer = \"\";\n\t\t\t\tclearInterval(downloadTimer);\n\t\t\t\tsoundFail.play();\n\t\t\t} else {\n\t\t\t\ttimeleft -= 1;\n\t\t\t}\n\t\t\ttimerWidth = (timeleft / 10) * 100;\n\t\t}, 1);\n\t}\n\n\tlet root;\n\tlet max = 9;\n\tlet incorrect = false;\n\tlet correct = false;\n\tlet turn = 0;\n\tlet a = getRandomInt(2, max);\n\tlet b = getRandomInt(2, max);\n\t$: c = a * b;\n\tlet record = 0;\n\tlet key;\n\tlet answer = \"\";\n\n\tfunction clearForm() {\n\t\tanswer = \"\";\n\t}\n\tfunction numberInput(val) {\n\t\tsoundClick.play();\n\t\tif (answer.toString().length < 5) {\n\t\t\tanswer = Number(answer + \"\" + val.target.innerText);\n\t\t}\n\t}\n\tfunction resetQuiz() {\n\t\tanswer = \"\";\n\t\ta = getRandomInt(2, max);\n\t\tb = getRandomInt(2, max);\n\t\tincorrect = false;\n\t\tcorrect = false;\n\t\ttimeleft = startTime;\n\t}\n\tfunction nextQuestion() {\n\t\tturn += 1;\n\t\tif (turn > record) {\n\t\t\trecord = turn;\n\t\t}\n\t\tresetQuiz();\n\t}\n\n\tfunction handleKeydown(event) {\n\t\tif (timeleft === 0) {\n\t\t\tif (key == \"Enter\") {\n\t\t\t\trestartGame();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tkey = event.key;\n\t\tif (!isNaN(key) && answer.toString().length < 5) {\n\t\t\tsoundClick.play();\n\t\t\tanswer = answer + \"\" + key;\n\t\t} else if (answer.toString().length > 0 && key == \"Enter\") {\n\t\t\thandleSubmit();\n\t\t} else if (key == \"Escape\") {\n\t\t\tanswer = \"\";\n\t\t} else if (key == \"Backspace\") {\n\t\t\tanswer = answer.slice(0, -1);\n\t\t} else {\n\t\t\tconsole.log(key);\n\t\t}\n\t}\n\n\tfunction notCorrect() {\n\t\tturn = 0;\n\t}\n\tfunction handleSubmit() {\n\t\tif (c == answer) {\n\t\t\tsoundSuccess.play();\n\t\t\tcorrect = true;\n\t\t\tnextQuestion();\n\t\t\tif (turn % 3 && max < 10) {\n\t\t\t\tmax += 1;\n\t\t\t}\n\t\t} else {\n\t\t\tsoundWrong.play();\n\t\t\tincorrect = true;\n\t\t\ttimeleft -= 200;\n\t\t\tif (timeleft < 0) {\n\t\t\t\ttimeleft = 0;\n\t\t\t}\n\t\t\tanswer = \"\";\n\t\t\tnotCorrect();\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\troot = () => document;\n\t\tdownloadTimer();\n\t});\n\n\tfunction getRandomInt(min, max) {\n\t\tmin = Math.ceil(min);\n\t\tmax = Math.floor(max);\n\t\treturn Math.floor(Math.random() * (max - min) + min);\n\t}\n\n\tfunction restartGame() {\n\t\tHowler.stop();\n\t\tresetQuiz();\n\t\tdownloadTimer();\n\t}\n</script>\n\n<style>\n\t.timer {\n\t\tbackground-color: red;\n\t}\n\th1 {\n\t\tfont-size: 6rem;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tdisplay: grid;\n\t\talign-items: center;\n\t\tjustify-items: center;\n\t}\n\t.correct {\n\t\tbackground-color: green;\n\t}\n\t.incorrect {\n\t\tbackground-color: rgb(255, 199, 199);\n\t}\n\n\tform {\n\t\tdisplay: grid;\n\t\tgrid-template-rows: 10px 1fr 1fr 2fr;\n\t\theight: 100%;\n\t\t/* justify-items: center;\n\t\talign-items: center; */\n\t\tjustify-items: stretch;\n\t}\n\n\t.buttons {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr 1fr;\n\t\tjustify-self: stretch;\n\t\talign-self: stretch;\n\t\tgrid-gap: 5px;\n\t\tpadding: 5px;\n\t}\n\t.buttons div {\n\t\t/* border: 1px solid red; */\n\t\tbackground-color: rgb(216, 216, 216);\n\t\tdisplay: grid;\n\t\tjustify-items: center;\n\t\talign-items: center;\n\t\tfont-size: 2rem;\n\t\tcursor: pointer;\n\t\tborder-radius: 5px;\n\t}\n\t/* .buttons div:hover {\n\t\tbackground-color: red;\n\t} */\n\n\t.timer img {\n\t\twidth: 30px;\n\t\tpadding: 0px;\n\t}\n\t.restart {\n\t\tdisplay: grid;\n\t\tfont-size: 2rem;\n\t}\n\t.restart button {\n\t\tmargin: 10px;\n\t\tbackground-color: #5ed3ff;\n\t\tborder-radius: 10px;\n\t\tborder: 0;\n\t}\n</style>\n\n<svelte:window on:keydown={handleKeydown} />\n<form on:submit|preventDefault={handleSubmit}>\n\t<div class=\"timer\" style=\"width: {(timeleft / startTime) * 100}%\">\n\t\t<!-- {timerWidth} -->\n\t</div>\n\n\t<h1 class:incorrect class=\"\">{a} * {b}</h1>\n\t<h1>{answer}</h1>\n\n\t<div class:buttons={timeleft > 0} class:restart={timeleft < 1}>\n\t\t{#if timeleft > 0}\n\t\t\t{#each Array.from(Array(10).keys()).slice(1) as theNumber}\n\t\t\t\t<div on:click={numberInput}>{theNumber}</div>\n\t\t\t{/each}\n\t\t\t<div on:click={clearForm}>C</div>\n\t\t\t<div on:click={numberInput}>0</div>\n\t\t\t<div on:click={handleSubmit}>OK</div>\n\t\t{:else}\n\t\t\t<h1>{a * b}</h1>\n\t\t\t<button on:click={restartGame}>Restart</button>\n\t\t{/if}\n\t</div>\n\n\t<div>Streak: {turn} / Record: {record}</div>\n</form>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_destroy","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","HowlerGlobal","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","_emit","_obtainHtml5Audio","testPlay","play","catch","console","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","isArray","msg","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","iterations","detaching","d","startTime","getRandomInt","floor","random","howler","timeleft","soundClick","soundSuccess","soundWrong","soundFail","downloadTimer","answer","incorrect","turn","record","resetQuiz","handleSubmit","restartGame","val","toString","Number","innerText","log","[object Object]","destroy_component","$destroy","$$props","obj","$$set","body"],"mappings":"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"}